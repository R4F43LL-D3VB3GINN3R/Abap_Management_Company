DATA: LV_ATTEMPTS TYPE I.

FUNCTION ZLOGIN001.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IN_LOGIN100) TYPE  C
*"     REFERENCE(IN_PASSWORD100) TYPE  C
*"     REFERENCE(OKCODE100) TYPE  SY-UCOMM
*"  EXPORTING
*"     REFERENCE(LV_OK) TYPE  BOOL
*"----------------------------------------------------------------------

CASE OKCODE100.
    WHEN 'FCT_EXIT100'.
      LEAVE PROGRAM.
    WHEN 'FCT_LOGIN100'.
      IF IN_LOGIN100 EQ 'ADMIN1' AND IN_PASSWORD100 EQ '123'.
        LV_OK = 'X'.
      ELSEIF IN_LOGIN100 EQ 'ADMIN1' AND IN_PASSWORD100 NE '123'.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'INVALID PASSWORD: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ELSEIF IN_LOGIN100 NE 'ADMIN1' AND IN_PASSWORD100 EQ '123'.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'INVALID LOGIN: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ELSEIF IN_LOGIN100 IS INITIAL AND IN_PASSWORD100 IS INITIAL.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'FILL ENTRIES: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ELSEIF IN_LOGIN100 IS INITIAL.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'FILL LOGIN ENTRY: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ELSEIF IN_PASSWORD100 IS INITIAL.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'FILL PASSWORD ENTRY: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ELSE.
        LV_ATTEMPTS = LV_ATTEMPTS + 1.
        MESSAGE |'INVALID DATA LOGIN: { 0 + LV_ATTEMPTS }| TYPE 'S' DISPLAY LIKE 'I'.
      ENDIF.

      IF LV_ATTEMPTS EQ 3.
        LEAVE PROGRAM.
      ENDIF.
  ENDCASE.

ENDFUNCTION.
